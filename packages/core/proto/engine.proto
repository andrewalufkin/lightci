syntax = "proto3";

package lightci;

service EngineService {
  // Pipeline operations
  rpc CreatePipeline(CreatePipelineRequest) returns (Pipeline);
  rpc GetPipeline(GetPipelineRequest) returns (Pipeline);
  rpc UpdatePipeline(UpdatePipelineRequest) returns (Pipeline);
  rpc DeletePipeline(DeletePipelineRequest) returns (Empty);
  rpc ListPipelines(ListPipelinesRequest) returns (ListPipelinesResponse);
  
  // Build operations
  rpc TriggerBuild(TriggerBuildRequest) returns (Build);
  rpc GetBuild(GetBuildRequest) returns (Build);
  rpc CancelBuild(CancelBuildRequest) returns (Empty);
  rpc ListBuilds(ListBuildsRequest) returns (ListBuildsResponse);
  rpc GetBuildLogs(GetBuildLogsRequest) returns (BuildLogs);
  
  // Artifact operations
  rpc UploadArtifact(stream UploadArtifactRequest) returns (Artifact);
  rpc DownloadArtifact(DownloadArtifactRequest) returns (stream DownloadArtifactResponse);
  rpc ListArtifacts(ListArtifactsRequest) returns (ListArtifactsResponse);
  
  // Step status updates
  rpc SubscribeToStepUpdates(SubscribeToStepUpdatesRequest) returns (stream StepStatusUpdateResponse);
}

message Empty {}

message Pipeline {
  string id = 1;
  string name = 2;
  string repository = 3;
  string workspace_id = 4;
  string description = 5;
  string default_branch = 6;
  PipelineStatus status = 7;
  repeated Step steps = 8;
  string created_at = 9;
  string updated_at = 10;
}

message Step {
  string id = 1;
  string name = 2;
  string command = 3;
  uint32 timeout_seconds = 4;
  map<string, string> environment = 5;
  repeated string dependencies = 6;
}

message CreateStepRequest {
  optional string id = 1;  // Optional field
  string name = 2;
  string command = 3;
  uint32 timeout_seconds = 4;
  map<string, string> environment = 5;
  repeated string dependencies = 6;
}

enum PipelineStatus {
  PIPELINE_STATUS_UNSPECIFIED = 0;
  PIPELINE_STATUS_PENDING = 1;
  PIPELINE_STATUS_RUNNING = 2;
  PIPELINE_STATUS_COMPLETED = 3;
  PIPELINE_STATUS_FAILED = 4;
}

message Build {
  string id = 1;
  string pipeline_id = 2;
  string branch = 3;
  string commit = 4;
  BuildStatus status = 5;
  string started_at = 6;
  string completed_at = 7;
  map<string, string> parameters = 8;
}

enum BuildStatus {
  BUILD_STATUS_UNSPECIFIED = 0;
  BUILD_STATUS_PENDING = 1;
  BUILD_STATUS_RUNNING = 2;
  BUILD_STATUS_SUCCESS = 3;
  BUILD_STATUS_FAILED = 4;
  BUILD_STATUS_CANCELLED = 5;
}

message Artifact {
  string id = 1;
  string build_id = 2;
  string name = 3;
  string path = 4;
  uint64 size = 5;
  string content_type = 6;
  map<string, string> metadata = 7;
}

message CreatePipelineRequest {
  string name = 1;
  string repository = 2;
  string workspace_id = 3;
  string description = 4;
  string default_branch = 5;
  repeated CreateStepRequest steps = 6;  // Use CreateStepRequest instead of Step
}

message GetPipelineRequest {
  string id = 1;
}

message UpdatePipelineRequest {
  string id = 1;
  string name = 2;
  string repository = 3;
  string description = 4;
  string default_branch = 5;
  repeated Step steps = 6;
}

message DeletePipelineRequest {
  string id = 1;
}

message ListPipelinesRequest {
  uint32 page = 1;
  uint32 limit = 2;
  string filter = 3;
  string sort = 4;
}

message ListPipelinesResponse {
  repeated Pipeline items = 1;
  uint32 total = 2;
  uint32 page = 3;
  uint32 limit = 4;
}

message TriggerBuildRequest {
  string pipeline_id = 1;
  string branch = 2;
  string commit = 3;
  map<string, string> parameters = 4;
}

message GetBuildRequest {
  string id = 1;
}

message CancelBuildRequest {
  string id = 1;
}

message ListBuildsRequest {
  uint32 page = 1;
  uint32 limit = 2;
  string pipeline_id = 3;
  string filter = 4;
  string sort = 5;
}

message ListBuildsResponse {
  repeated Build items = 1;
  uint32 total = 2;
  uint32 page = 3;
  uint32 limit = 4;
}

message BuildLog {
  string step_id = 1;
  string content = 2;
  string timestamp = 3;
}

message GetBuildLogsRequest {
  string build_id = 1;
}

message BuildLogs {
  repeated BuildLog logs = 1;
}

message UploadArtifactRequest {
  oneof data {
    ArtifactMetadata metadata = 1;
    bytes chunk = 2;
  }
}

message ArtifactMetadata {
  string build_id = 1;
  string name = 2;
  string content_type = 3;
  map<string, string> metadata = 4;
}

message DownloadArtifactRequest {
  string id = 1;
}

message DownloadArtifactResponse {
  bytes chunk = 1;
}

message ListArtifactsRequest {
  string build_id = 1;
}

message ListArtifactsResponse {
  repeated Artifact items = 1;
}

enum StepStatus {
  STEP_STATUS_UNSPECIFIED = 0;
  STEP_STATUS_PENDING = 1;
  STEP_STATUS_RUNNING = 2;
  STEP_STATUS_SUCCESS = 3;
  STEP_STATUS_FAILED = 4;
  STEP_STATUS_CANCELLED = 5;
  STEP_STATUS_TIMED_OUT = 6;
  STEP_STATUS_SKIPPED = 7;
}

message SubscribeToStepUpdatesRequest {
  string build_id = 1;
}

message StepStatusUpdateResponse {
  string build_id = 1;
  string step_name = 2;
  StepStatus status = 3;
}

message CreateBuildRequest {
  string pipeline_id = 1;
  string branch = 2;
  string commit = 3;
  map<string, string> parameters = 4;
}

message StepResult {
  string step_id = 1;
  StepStatus status = 2;
  string output = 3;
  string error = 4;
  string started_at = 5;
  string completed_at = 6;
  int32 exit_code = 7;
} 